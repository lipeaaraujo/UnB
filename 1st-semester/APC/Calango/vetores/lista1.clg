algoritmo resistenciaEquivalente;
// Síntese
//  Objetivo:  Calcular com base nas resistências inseridas a resistência equivalente de um circuito em série e um em paralelo.
//  Entrada : N resistências.
//  Saída   : As resistências em série e em paralelo.


principal
	// Declarações

	real resistencia[8], ultimo_valor, res_serie, res_paralelo;
	inteiro i, tamanhoVetor;

	// Instruções

	// Entrada de dados:
	i = 0;
	ultimo_valor = 1;
	enquanto (ultimo_valor > 0 e i < 8) faca
		leia(ultimo_valor);
		
		// Aplica o valor ao vetor se ele for maior que 0.
		se (ultimo_valor > 0) entao
			resistencia[i] = ultimo_valor;
			i = i + 1;
		fimSe
	fimEnquanto

	// Atribui o valor do tamanho do vetor:
	tamanhoVetor = i;
	
	res_serie = resistencia_serie(resistencia, tamanhoVetor);
	res_paralelo = resistencia_paralelo(resistencia, tamanhoVetor);

	// Saída de dados:
	escreval("VALOR EM SERIE = ", res_serie::2);
	escreval("VALOR EM PARALELO = ", res_paralelo::4);
	
fimPrincipal

funcao real resistencia_serie(real resistencia[], inteiro tamanhoVetor)
	// Calcula a resistência em série.
	
	real res_serie;
	inteiro i;

	res_serie = 0;
	para (i de 0 ate tamanhoVetor - 1 passo 1) faca
		res_serie = res_serie + resistencia[i]; 
	fimPara

retorna res_serie;
fimFuncao

funcao real resistencia_paralelo(real resistencia[], inteiro tamanhoVetor)
	// Calcula a resistência em paralelo

	real res_paralelo, soma_inverso;
	inteiro i;

	soma_inverso = 0;
	para (i de 0 ate tamanhoVetor - 1 passo 1) faca
		soma_inverso = soma_inverso + (1 / resistencia[i]);
	fimPara

	res_paralelo = 1 / soma_inverso;
	
retorna res_paralelo;
fimFuncao
